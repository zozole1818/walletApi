definitions:
  model.BalanceResponse:
    properties:
      balance:
        example: 10000
        type: number
      currency:
        example: SGD
        type: string
      id:
        example: 1
        type: integer
    type: object
  model.ErrResponse:
    properties:
      code:
        example: 401
        type: integer
      date:
        example: "2021-12-19T15:25:58.907966Z"
        type: string
      error:
        example: Login failed. Please double check username and password.
        type: string
      message:
        example: Unauthorized
        type: string
    type: object
  model.TokenResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLC....jUxOTd9.1vqDegq6YpbXuI5qrfKDG_-AloRajTBuE1eZCMhU1no
        type: string
    type: object
  model.TransactionRequest:
    properties:
      amount:
        example: 20
        type: number
      receiverBalanceId:
        example: 2
        type: integer
      senderBalanceId:
        example: 1
        type: integer
    type: object
  model.TransactionResponse:
    properties:
      amount:
        type: number
      currency:
        type: string
      date:
        type: string
      id:
        type: integer
      receiverBalanceId:
        type: integer
      senderBalanceId:
        type: integer
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is POC for walletApi. Is allows you to send money between users
    already registered in the system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: walletApi by Zuzanna
  version: "1.0"
paths:
  /api/v1/balances:
    get:
      description: Retrieves list of balances for authenticated user.
      operationId: GetBalances
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.BalanceResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieves list of balances for authenticated user.
      tags:
      - balances
  /api/v1/transactions:
    get:
      description: Retrives list of transactions for the authenticated user.
      operationId: RetriveTransactions
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/model.TransactionResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrives list of transactions.
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Triggers transfer of money from sender balance to receiver balance.
      operationId: ExecuteTransaction
      parameters:
      - description: Transaction definifion.
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.TransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.TransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Executes transaction between two balances.
      tags:
      - transactions
  /login:
    post:
      description: Login endpoint for getting JWT token.
      operationId: Login
      parameters:
      - description: User's username.
        in: formData
        name: username
        required: true
        type: string
      - description: User's password.
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      summary: Provide your username and password for authentication.
      tags:
      - login
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
